# Assignment 0

## Installing Plasma
The plasma installer can be downloaded from
<http://icl.cs.utk.edu/projectsfiles/plasma/pubs/plasma-installer.tar.gz> (using
`wget`), and decompressed with `tar`. 

The installer includes the python script setup.py. The script requires some
specifications: c/fortran compilers and the locations of the BLAS and LAPack
libraries. Ozzys OS is actually displayed upon login but it can also be found in
`/proc/version`. The packages exact names on the system is displayed when running:

```apt list --installed  | grep liblapack ``` 

```apt list --installed  | grep libblas ``` 

Using those the path to each library can be found with:

```dpkg -L liblapack```

```dpkg -L libblas3```

Run: 

```./setup.py --cc=gcc --fc=gfortran --blaslib=/usr/lib/libblas/libblas.so --lapacklib=/usr/lib/liblapack.so --notesting```

NB since we explicitly give the library paths to the setup we don't actually
need to add them to the LD_LIBRARY_PATH env variable. At first, we ran the setup without the no testing flag. But the installation went on for a really long time, stuck on testing/lin. Instead we aborted the installation and ran without testing. 

## Testing

When we could access the files we noticed that the tests in testing/lin
were not included in the plasma tests we were supposed to run. Just running
plasma_testing.py went a lot faster. To run plasma_testing.py, we compiled the
tests in the testing directory by invoking the Makefile. And then ran the python
test script.

```cd build/plasma_2.8.0/testing ```

```make```

```python plasma_testing.py```

## Makefile(s)

The makefile in the testing directory is invoked there are a few other makefiles
involved in the build:

* __testing/Makefile:__ includes ../Makefile.internal and (if it exists and it
does) Makefile.src

Makefile produces four executables for various tests, compiles these from source
files which are defined in the Makefile and in Makefile.src.

* __../Makefile.internal:__ includes PLASMA_DIR/make.inc,where PLASMA_DIR is the
directory plasma_2.8.0 (where Makefile.internal is) and also tries to include
./make.inc.$(MACHINE) and ./Makefil.gen if they exist (which they do not).

Makefile.internal: Sets libraries and paths used by other makefiles in the project, it uses some variables set by make.inc.  

* __make.inc:__ set variables such as compiler and paths to libraries. I.e. autogenerated using our input from setup.

