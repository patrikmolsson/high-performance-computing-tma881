# Assignment 0

## Installing Plasma
The plasma installer can be downloaded from <http://icl.cs.utk.edu/projectsfiles/plasma/pubs/plasma-installer.tar.gz>, and decompressed. 

The installer includes the python script setup.py. The script requires some specifications: c/fortran compilers and the locations of the BLAS and LAPack libraries. Ozzys OS is actually displayed upon login but it can also be found in /proc/version. The packages exact names on the system is displayed when running:

```apt list --installed  | grep libblas/liblapack ``` 

Using those the path to each library can be found with:

```dpkg -L libblas3/liblapack-dev```

Run: 

```./setup.py --cc=gcc --fc=gfortran --blaslib=/usr/lib/libblas/libblas.so --lapacklib=/usr/lib/liblapack.so --notesting```

At first, we ran the setup without the no testing flag. But the installation went on for a really long time, stuck on testing/lin. Instead we aborted the installation and ran without testing. When we then could access the files we noticed that the tests in testing/lin were not included in the plasma tests that we were supposed to run. Just running plasma_testing.py went a lot faster. To run plasma_testing.py, we compiled the tests in the testing directory by invoking the Makefile.
testing/Makefile: include ../Makefile.internal, -include Makefile.src

../Makefile.internal: include PLASMA_DIR/make.inc, PLASMA_DIR is plasma_2.8.0 (Where internal is)


Makefile: Produces 4 executables for various tests. Compiles these from source files, which are defined in Makefile.src. 

make.inc: set variables such as compiler and paths to libraries. I.e. autogenerated using our input from setup.

Makefile.internal: Sets libraries and paths used by other makefiles in the project, it uses some variables set by make.inc.  
